#
# Infrastructure template for the kriya.org.nz website
#
heat_template_version: 2013-05-23

description: >
  Infrastructure template for the kriya.org.nz website

parameters:
  key_name:
    type: string
    description: Name of a new or existing key pair to use for the server
    constraints:
      - custom_constraint: nova.keypair
    default: kriyayoga

#  public_key:
#    type: string
#    description: Public SSH key that will be injected on compute instances
#    default: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDP5u2F9w/zmOjPukfPMe4ViucW7qTHBjIE+IcNJSb8Du3+OBQyDwCG/yOug/tMFcoeFlxBpe5SPuLl2diqflGwDwnmXfuagcaNmro9mN0phO37X2scKA2zOfrB6LKfvM9MdVr0c4gN9ltGn2iwwT7FViUom68vhVUkVYLNTA1LNhbj2335q5ND+3sPbDY5YpM+Md9VmCqJE7Oj/DphiVGGLAjkRcJwYrOVXkYwduWiWS3scMfuYWq29qrvXVAtt4AIBulbw/r3qoneIcxpkil/xBmB3wVr9DE/VW8osz3O5hDrmE7q9O6In3kLVJ19QXKvFD0yMuuYE8n351ndWwnmDSNNDiaq4RkMwK7A0FIqTa1XqAIO0FQ2W3tN52OrOY/ym09JTWF/VIBbd64cicx2A2IXZxV4xTbruSrUF31Ksi4eaT92Vo1wxSX1wLFym1HXVlimWwFnMuikR0RCQaqMJUDycQKT8FfiqcxKB5cT2PQbz2TAnz79tBJukPiA/gKfTZkPL9qH9UP6SOhHwvyp/IEHBoIrmideC4IRerVB2dgeSnze9OtKp7ssuOUMsjsyQmvZ0Us9Kj9UyiW8iIekUhG/tE8d1dPK2yG/44NvDWJ5JzJKBxLWBCa+9+05zRluzFf5mesw8DOuaRlQUQzmTW5laegDCifIyA1Ng9hZxw== admin@kriya.org.nz

  web_servers_flavor:
    type: string
    description: Flavour for the web servers
    default: c1.c2r2
    constraints:
      - custom_constraint: nova.flavor

  db_servers_flavor:
    type: string
    description: Flavour for the database servers
    default: c1.c2r2
    constraints:
      - custom_constraint: nova.flavor

  image:
    type: string
    description: Image ID or image name to use for the server
    default: ubuntu-14.04-x86_64
    constraints:
      - custom_constraint: glance.image

  public_net:
    type: string
    description: >
      ID or name of public network for which floating IP addresses will be allocated
    default: public-net

  public_net_id:
    type: string
    description: >
      ID of public network for which floating IP addresses will be allocated
    default: 849ab1e9-7ac5-4618-8801-e6176fbbcf30

  private_net_name:
    type: string
    description: Name of private network to be created
    default: private-net

  private_net_cidr:
    type: string
    description: Private network address (CIDR notation)
    default: 192.168.0.0/24

  private_net_gateway:
    type: string
    description: Private network gateway address
    default: 192.168.0.1

  private_net_pool_start:
    type: string
    description: Start of private network IP address allocation pool
    default: 192.168.0.10

  private_net_pool_end:
    type: string
    description: End of private network IP address allocation pool
    default: 192.168.0.250

  router_name:
    type: string
    description: >
      Name of the router that will connect the private and public networks
    default: border-router


resources:
#  authorised_key:
#    type: OS::Nova::KeyPair
#    properties:
#      name: { get_param: key_name }
#      public_key: { get_param: public_key }

  private_net:
    type: OS::Neutron::Net
    properties:
      name: { get_param: private_net_name }

  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: private_net }
      cidr: { get_param: private_net_cidr }
      gateway_ip: { get_param: private_net_gateway }
      allocation_pools:
        - start: { get_param: private_net_pool_start }
          end: { get_param: private_net_pool_end }

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_net }
      name: { get_param: router_name }

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: private_subnet }

  webserver1:
    type: OS::Nova::Server
    properties:
      name: webserver1
      image: { get_param: image }
      flavor: { get_param: web_servers_flavor }
      key_name: { get_param: key_name }
      block_device_mapping:
        - device_name: vda
          volume_id: { get_resource: webserver1-rootvol }
          delete_on_termination: false
      networks:
        - port: { get_resource: webserver1_port }
    depends_on: dbserver1

  webserver1-rootvol:
    type: OS::Cinder::Volume
    properties:
      name: webserver1-rootvol
      image: { get_param: image }
      size: 15

  webserver1_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }
      security_groups:
        - { get_resource: secgroup_webservers }

  webserver1_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
#      Floating network not supported in IceHouse
#      floating_network: { get_param: public_net }
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: webserver1_port }
    depends_on: router_interface

  secgroup_webservers:
    type: OS::Neutron::SecurityGroup
    properties:
      name: webservers
      description: HTTP, HTTPS, SSH
      rules:
        - direction: ingress
          protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 80
          port_range_max: 80
        - direction: ingress
          protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 443
          port_range_max: 443
        - direction: ingress
          protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 22
          port_range_max: 22

  dbserver1:
    type: OS::Nova::Server
    properties:
      name: dbserver1
      image: { get_param: image }
      flavor: { get_param: db_servers_flavor }
      key_name: { get_param: key_name }
      block_device_mapping:
        - device_name: vda
          volume_id: { get_resource: dbserver1-rootvol }
          delete_on_termination: false
      networks:
        - port: { get_resource: dbserver1_port }

  dbserver1-rootvol:
    type: OS::Cinder::Volume
    properties:
      name: dbserver1-rootvol
      image: { get_param: image }
      size: 15

  dbserver1_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }
      security_groups:
        - { get_resource: secgroup_dbservers }

  secgroup_dbservers:
    type: OS::Neutron::SecurityGroup
    properties:
      name: dbservers
      description: MYSQL
      rules:
        - direction: ingress
          protocol: tcp
          remote_group_id: { get_resource: secgroup_webservers }
          remote_mode: remote_group_id
          port_range_min: 3306
          port_range_max: 3306

outputs:
  webserver1_private_ip:
    description: IP address of webserver1 in private network
    value: { get_attr: [ webserver1, first_address ] }
  webserver1_public_ip:
    description: Floating IP address of webserver1 in public network
    value: { get_attr: [ webserver1_floating_ip, floating_ip_address ] }
  dbserver1_private_ip:
    description: IP address of dbserver1 in private network
    value: { get_attr: [ dbserver1, first_address ] }

